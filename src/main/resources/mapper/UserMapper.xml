<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="guomanwang.mapper.UserMapper">
	<!-- 创建一个映射，将查询结果与实体类之间进行映射 -->
	<resultMap type="guomanwang.domain.User" id="resultUser">
		<id column="userid" property="userId" /><!-- 主键的映射 -->
		<result column="username" property="userName" /><!-- 非主键的映射 -->
		<result column="password" property="passWord" />
		<result column="phone" property="telPhone" />
		<result column="grade" property="Grade" />
		<result column="gradevalue" property="gradeValue" />
		<result column="sex" property="Sex" />
		<result column="headurl" property="headUrl" />
		<result column="honor" property="Honor" />
		<result column="introduce" property="Introduce" />
		<result column="signdays" property="signdays" />
		<result column="status" property="status" />
		<result column="registerday" property="registerday" />
	</resultMap>
	
	<update id="update" parameterType="guomanwang.domain.User">
		update user 
		<set>
			<if test="userName!=null">username = #{userName},</if>
			<if test="passWord!=null ">password = #{passWord},</if>
			<if test="telPhone!=null ">phone = #{telPhone},</if>
			<if test="gradeValue!=null">gradevalue = #{gradeValue},</if>
			<if test="Sex!=null">sex = #{Sex},</if>
			<if test="Honor!=null">honor = #{Honor},</if>
			<if test="headUrl!=null ">headurl = #{headUrl},</if>	
			<if test="Introduce!=null">introduce = #{Introduce},</if>
			<if test="status!=null ">status = #{status},</if>	
		</set>
		where userid = #{userId}
	</update>
	<!-- 找回密码、重置密码 -->
	<update id="findpassbyphone" parameterType="guomanwang.domain.User">
		update user 
		<set>
			<if test="passWord!=null ">password = #{passWord},</if>
		</set>
		where phone = #{telPhone}
	</update>
	
	<insert id="save" parameterType="guomanwang.domain.User" 
	 useGeneratedKeys="true" keyColumn="userid" keyProperty="userId">
		insert into user(gradevalue,honor,username,password,phone,headurl,registerday) 
		values(#{gradeValue},#{Honor},#{userName},#{passWord},#{telPhone},#{headUrl},#{registerday});
	</insert>
	<select id="selectuserinfo" resultMap="resultUser">
		select a.*,ifnull(b.id-1,0) grade
		from user a
		LEFT OUTER JOIN grade b on a.gradevalue>=b.gradeValue and b.gradeStatus=1
		where phone=#{telPhone}
		ORDER BY grade DESC
		LIMIT 1
	</select>
	<select id="getuserlist" parameterType="guomanwang.domain.Page" resultMap="resultUser">
		SELECT *
		from user
		where user.honor &lt; 3
		limit #{start},#{rows}
	</select>
	<select id="getusernumber" resultType="java.lang.Integer" >
		SELECT count(*)
		from user
		where user.honor &lt; 3
	</select>
	<select id="getuserbyid" resultMap="resultUser">
		select a.*,ifnull(b.id-1,0) grade
		from user a
		LEFT OUTER JOIN grade b on a.gradevalue>=b.gradeValue and b.gradeStatus=1
		where userid=#{userId}
		ORDER BY grade DESC
		LIMIT 1
	</select>
	<select id="getusergradebyuserid" resultType="java.lang.Integer">
		select ifnull(b.id-1,0) grade
		from user a
		LEFT OUTER JOIN grade b on a.gradevalue>=b.gradeValue and b.gradeStatus=1
		where userid=#{userId}
		ORDER BY grade DESC
		LIMIT 1
	</select>
	<delete id="deleteUserById" parameterType="int">
         delete from user where userid=#{userId}
    </delete>
	<!-- 根据用户名或者联系方式实现模糊查询 -->
	<select id="searchuserbyname" resultMap="resultUser">
		SELECT *
		from user
		where user.honor &lt; 3 and (username like "%"#{userName}"%" or phone like "%"#{telPhone}"%")
		order by userid
	</select>
	<select id="getSignTop20Users" resultMap="resultUser">
		SELECT a.userid,username,headurl,max(days) signdays
		FROM user a,(
		 SELECT userid,login_dt
		 ,@cont_day := (CASE WHEN (@last_uid=userid AND DATEDIFF(login_dt,@last_dt)=1) 
		 THEN (@cont_day+1)
		    ELSE 1 END) AS days
		 ,(@cont_ix := (@cont_ix+IF(@cont_day=1,1,0))) AS cont_ix
		 ,@last_uid:=userid, @last_dt:=login_dt
		  FROM (SELECT userid ,DATE(signdate) AS login_dt FROM sign ORDER BY userid,login_dt) AS t
		  ,(SELECT @last_uid:='',@last_dt:='',@cont_ix:=0,@cont_day:=0) AS t1
		) AS b
		where login_dt>=DATE_SUB(CURDATE(), INTERVAL 1 DAY) and a.userid=b.userid
		GROUP BY b.userid
		ORDER BY signdays desc
		limit 20
	</select>
	<!-- 根据管理员用户名或者联系方式实现模糊查询 -->
	<select id="searchadminbyname" resultMap="resultUser">
		SELECT *
		from user
		where user.honor &gt; 2 and (username like "%"#{userName}"%" or phone like "%"#{telPhone}"%")
		order by userid
	</select>
	<!-- 分页查询管理员和超级管理员 -->
	<select id="getadminlist" parameterType="guomanwang.domain.Page" resultMap="resultUser">
		SELECT *
		from user
		where user.honor &gt; 2
		limit #{start},#{rows}
	</select>
	<!-- 获得所有启用的用户 -->
	<select id="getallusers" resultMap="resultUser">
		SELECT *
		from user
		where user.honor &lt; 3 and status=1
	</select>
	<!-- 根据输入的日期范围获得该时间段内每日新增用户 -->
	<select id="getregistercount" resultMap="resultUser">
		select b.date registerday,IFNULL(a.number,0) signdays
		from (
		select ADDDATE(#{startdate},numlist.id)as date
		from (
		select n1.i+n10.i*10+n100.i*100 as id 
		from num n1 cross join num as n10 cross join num as n100)as numlist 
		where ADDDATE(#{startdate},numlist.id) &lt;= #{enddate})b LEFT JOIN 
		(SELECT registerday,count(*) number
		from user
		where registerday BETWEEN #{startdate} and #{enddate}
		GROUP BY registerday)a on a.registerday=b.date
		order by b.date
	</select>
	<!-- 获得近一个月的pv和uv数据返回的参数分别为日期、每日pv、每日uv -->
	<select id="getmonthpvuv" resultMap="resultUser">
		select b.date registerday,IFNULL(a.pv,0) signdays,IFNULL(c.uv,0) userid
		from(
		select ADDDATE(DATE_SUB(curdate(), INTERVAL 30 DAY),numlist.id)as date
		from (
		select n1.i+n10.i*10+n100.i*100 as id 
		from num n1 cross join num as n10 cross join num as n100)as numlist 
		where ADDDATE(DATE_SUB(curdate(), INTERVAL 30 DAY),numlist.id) &lt;= curdate()-1) b LEFT JOIN
		(select ctime,count(logid) pv
		FROM log
		where ctime &gt;= DATE_SUB(curdate(), INTERVAL 29 DAY)
		GROUP BY DATE_FORMAT(ctime,'%Y-%m-%d'))a on DATE_FORMAT(a.ctime,'%Y-%m-%d')=b.date
		LEFT JOIN(
		select ctime,count(DISTINCT(userid))uv
		FROM log
		where ctime &gt;= DATE_SUB(curdate(), INTERVAL 29 DAY)
		GROUP BY DATE_FORMAT(ctime,'%Y-%m-%d'))c on DATE_FORMAT(c.ctime,'%Y-%m-%d')=b.date
		order by b.date
	</select>
</mapper>